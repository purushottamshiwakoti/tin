<?php
/**
 * Created by PhpStorm.
 * User: nbin
 * Date: 7/26/18
 * Time: 10:04 AM
 */

namespace App\Data\Models;


use App\Data\Traits\AttachableTrait;
use App\Events\Website\RatingApproved;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Rating extends Model
{
    use SoftDeletes,AttachableTrait;

    protected $fillable = [
        'title',
        'ratable_type',
        'ratable_id',
        'ratable_title',
        'rating_value',
        'review',
        'email',
        'phone_number',
        'full_name',
        'publish'
    ];

    public static function boot()
    {
        static::saving(function($model){
            
            $model->ratable_title = $model->ratable->title;
        });
        static::updated(function($model){
            if($model->isDirty('publish') && $model->publish == 1)
            {
                event(new RatingApproved($model));
            }
        });
        parent::boot(); // TODO: Change the autogenerated stub
    }

    public function getNameAttribute($value)
    {
        return $this->full_name;
    }

    public function ratable()
    {
        return $this->morphTo();
    }

    public function scopePublished($query)
    {
        return $query->where('publish',1);
    }

    public function scopeLatest($query)
    {
        return $query->orderBy('id','DESC');
    }

    public function getAverageRatingAttribute($value)
    {
       
        $ratings = $this->ratings;
        if(count($ratings)>0)
        {
            return $ratings->sum('rating_value')/count($ratings);
        }
        return 0;

    }

}